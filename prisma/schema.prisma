// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Owner {
id        Int      @id @default(autoincrement())
email     String   @unique
password  String
point     Int
refreshToken  String?
Stores    Store[]
}

model Customer {
id        Int      @id @default(autoincrement())
email     String   @unique
password  String
point     Int      @default(1000000)
refreshToken  String?
Orders    Order[]
Comments  Comment[]
}

model Store {
id        Int      @id @default(autoincrement())
OwnerId   Int
name      String
info      String
Menus     Menu[]
Orders    Order[]
Comments  Comment[]
Owner     Owner    @relation(fields: [OwnerId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model Menu {
id       Int      @id @default(autoincrement())
StoreId  Int
name     String
image    String?
price    Int
Store    Store    @relation(fields: [StoreId], references: [id], onUpdate: Cascade, onDelete: Cascade)
Details  OrderDetail[]
}

model Order {
id          Int          @id @default(autoincrement())
CustomerId  Int
StoreId     Int
price       Int
status      Int
Details     OrderDetail[]
Customer    Customer   @relation(fields: [CustomerId], references: [id], onUpdate: Cascade, onDelete: Cascade)
Store       Store      @relation(fields: [StoreId], references: [id], onUpdate: Cascade, onDelete: Cascade)
Comment     Comment?   
}

model OrderDetail {
id          Int    @id @default(autoincrement())
OrderId     Int
MenuId      Int
count       Int
totalPrice  Int
Order       Order  @relation(fields: [OrderId], references: [id], onUpdate: Cascade, onDelete: Cascade)
Menu        Menu   @relation(fields: [MenuId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model Comment {
id          Int      @id @default(autoincrement())
CustomerId  Int
OrderId     Int      @unique
StoreId     Int
review      String
star        Int
Customer    Customer @relation(fields: [CustomerId], references: [id], onUpdate: Cascade, onDelete: Cascade)
Order       Order    @relation(fields: [OrderId], references: [id], onUpdate: Cascade, onDelete: Cascade)       
Store       Store    @relation(fields: [StoreId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}
